cflags = -fsigned-char -std=c++11 -I $src -I../../../singlib/inc -fmax-errors=20

skip_usage = -u
test_mode =
sing_src = ../../tests

rule cc
  deps = gcc
  depfile = $out.d
  command = g++ -MD -MF $out.d $cflags $debug_flags -c $in -o $out

rule sc
  deps = gcc
  depfile = $out.d
  command = $singcc $sing_debug_flags $skip_usage -f ../format.txt -I ../../tests -MF -o $out $in

rule ln
  command = g++ -std=c++11 -o $out $in $singlib

build $src/synth_pkgs_test.h  | $src/synth_pkgs_test.cpp : sc $sing_src/synth_pkgs_test.sing  
build $src/main.h             | $src/main.cpp            : sc $sing_src/main.sing
build $src/synth_test.h       | $src/synth_test.cpp      : sc $sing_src/synth_test.sing  
build $src/synth_test_pkg.h   | $src/synth_test_pkg.cpp  : sc $sing_src/synth_test_pkg.sing  
build $src/synth_test_pkg2.h  | $src/synth_test_pkg2.cpp : sc $sing_src/synth_test_pkg2.sing  
build $src/types_and_vars.h   | $src/types_and_vars.cpp  : sc $sing_src/types_and_vars.sing  
build $src/synth_test_oop.h   | $src/synth_test_oop.cpp  : sc $sing_src/synth_test_oop.sing
build $src/siege.h            | $src/siege.cpp           : sc $sing_src/siege.sing
  skip_usage =

build main.o             : cc $src/main.cpp
build siege.o            : cc $src/siege.cpp
build synth_test.o       : cc $src/synth_test.cpp  
build synth_pkgs_test.o  : cc $src/synth_pkgs_test.cpp  
build synth_test_pkg.o   : cc $src/synth_test_pkg.cpp  
build types_and_vars.o   : cc $src/types_and_vars.cpp  
build synth_test_oop.o   : cc $src/synth_test_oop.cpp  

build $bin_target: ln main.o siege.o synth_test.o synth_pkgs_test.o synth_test_pkg.o types_and_vars.o synth_test_oop.o

default $bin_target
